version: "3.7"

services:
  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=test_password
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  users_service:
    build:
      context: ./users_service
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    environment:
      - POSTGRES_DB_HOST=postgresdb
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - SECRET_JWT_KEY=SECRET_JWT_KEY
    entrypoint:
      - ./entrypoint.sh
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped


  books_service:
    build:
      context: ./books_service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_DB_HOST=postgresdb
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - SECRET_JWT_KEY=SECRET_JWT_KEY
    entrypoint:
      - ./entrypoint.sh
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped

  issues_service:
    build:
      context: ./issues_service
      dockerfile: Dockerfile
    ports:
      - "5555:1234"
    environment:
      - POSTGRES_DB_HOST=postgresdb
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - SECRET_JWT_KEY=SECRET_JWT_KEY
    entrypoint:
      - ./entrypoint.sh
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - users_service
#      - books_service

